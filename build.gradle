plugins {
    id 'java-library'
    id 'maven-publish'
    id "org.jetbrains.kotlin.jvm" version '1.5.31'
    id 'ru.kontur.kinfra.presets' version '1.5'
    id 'signing'
}

ext {
    release = "1.1.1"

    versions = [
        coroutines: '1.4.3',
        commons   : '1.7',
    ]

    branch = project.properties["branch"]?.toString()
    isStableBranch = (branch == "master") || branch?.startsWith("release-")
}

group = "ru.kontur.kinfra"
version = release + (isStableBranch ? "" : "-SNAPSHOT")
archivesBaseName = "kinfra-io"

dependencies {
    implementation platform("org.jetbrains.kotlinx:kotlinx-coroutines-bom:${versions.coroutines}")
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core"

    testImplementation "ru.kontur.kinfra:kinfra-commons:${versions.commons}"
}

tasks.withType(org.jetbrains.kotlin.gradle.dsl.KotlinJvmCompile) {
    kotlinOptions.useIR = true
}

jar {
    manifest.attributes "Automatic-Module-Name": "ru.kontur.kinfra.io"
}

java {
    withJavadocJar()
    withSourcesJar()
}

signing {
    sign publishing.publications
}

publishing {
    publications {
        maven(MavenPublication) {
            pom {
                name = 'kinfra-io'
                group = 'ru.kontur.kinfra'
                artifactId = 'kinfra-io'

                description = 'IO for kinfra'
                url = 'https://github.com/kinfra/kinfra-io'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'http://www.opensource.org/licenses/mit-license.php'
                    }
                }
                developers {
                    developer {
                        id = 'frost13it'
                        name = 'Vladimir Petrakovich'
                        email = 'public@frostbit.tk'
                    }
                }
                scm {
                    connection = "scm:git:git://github.com:kinfra/kinfra-io.git"
                    developerConnection = 'scm:git:ssh://github.com:kinfra/kinfra-io.git'
                    url = 'https://github.com/kinfra/kinfra-io'
                }
            }
        }
    }
    repositories {
        def properties = project.properties
        def repoUrl = properties["publishing.repo.url"]
        if (repoUrl) {
            maven {
                url = repoUrl

                credentials {
                    username = properties["publishing.repo.username"]
                    password = properties["publishing.repo.password"]
                }
            }
        }
    }
}
