plugins {
    id "ru.kontur.library" version '5.5'
    id 'java-library'
    id 'maven-publish'
    id "org.jetbrains.kotlin.jvm"
    id 'ru.kontur.kinfra.presets' version '1.5'
}

ext {
    release = "1.1.1"

    versions = [
        coroutines: '1.4.2',
        commons: '1.7',
    ]

    branch = project.properties["branch"]?.toString()
    isStableBranch = (branch == "master") || branch?.startsWith("release-")
}

group = "ru.kontur.kinfra"
version = release + (isStableBranch ? "" : "-SNAPSHOT")

dependencies {
    implementation platform("org.jetbrains.kotlinx:kotlinx-coroutines-bom:${versions.coroutines}")
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core"

    testImplementation "ru.kontur.kinfra:kinfra-commons:${versions.commons}"
}

tasks.withType(org.jetbrains.kotlin.gradle.dsl.KotlinJvmCompile) {
    kotlinOptions.useIR = true
}

jar {
    manifest.attributes "Automatic-Module-Name": "ru.kontur.kinfra.io"
}

publishing {
    repositories {
        def properties = project.properties
        def repoUrl = properties["publishing.repo.url"]
        if (repoUrl) {
            maven {
                url = repoUrl

                credentials {
                    username = properties["publishing.repo.username"]
                    password = properties["publishing.repo.password"]
                }
            }
        }
    }
}
